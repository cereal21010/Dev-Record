프록시 : 껍대기를 한 꺼풀 씌워서 내부 객체를 숨긴다.?

대리자, 대변인, 즉 다른 객체를 대신해 그 역할을 수행하는 객체 ( 기능의 흐름을 제어 )

* 기능의 흐름 제어 : 프록시 객체를 이용해 원래 객체의 변경없이 기능을 제어할 수 있다.
- 어떤 객체에 대한 접근을 제어하기 위한 용도로 대리인이나 대변인에 해당하는 객체를 제공하는 패턴
- 인터페이스를 사용할 클래스에 대한 객체가 들어갈 자리에 대리자 객체를 대신 투입
- 클라이언트 쪽에서는 실행시킨 클래스인지 대리자 객체인지 알 수 없게 처리하는 것
- *프록시는 흐름제어만 할 뿐 결과값을 조작하거나 변경시키면 안 됨 (값?을 수정이나 입력은 하면 안 된다)

- 대리자는 실제 서비스와 같은 이름의 메서드를 구현 (이 때 인터페이스 사용)
- 대리자는 실제 서비스에 대한 참조 변수를 갖는다 (합성?)
- 대리자는 실제 서비스의 같은 이름을 가진 메서드를 호출하고 그 값을 클라이언트에게 돌려준다.
- 대리자는 실제 서비스의 메서드 호출 전후에도 별도의 로직을 수행할 수 있다.

 https://limkydev.tistory.com/79
 
 - 프록시 패턴의 종류
 https://andamiro91.tistory.com/9
 
 
 전략 패턴
strategy
공통된 속성에서 나뉘여서 각자 구현된 곳에서 추가적으로 기능을 추가해준다

템플릿메서드 패턴이랑 비슷 
 
데코레이팅 패턴(stream에서 자주 쓰이는 패턴) 

스테이트 패턴